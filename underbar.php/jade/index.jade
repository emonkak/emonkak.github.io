doctype 5

html(lang="ja")
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no")
    title Underbar.php - Functional array utility
    link(href="css/screen.css", media="screen, projection", rel="stylesheet")
    link(href="css/print.css", media="print", rel="stylesheet")
  body
    header#header
      h1
        a(href="#") Underbar.php
        a.btn-nav(href="#header") &#x2630;
      nav#navigation(role="navigation")
        ul
          li: a(href="#introduction") Introduction
          li: a(href="#getting-started") Getting Started

        h2
          a(href="#collections") Collections
            p Array or traversable object
        ul
          li: a(href="#each") each
          li: a(href="#map") map
          li: a(href="#parMap") parMap
          li: a(href="#reduce") reduce
          li: a(href="#reduceRight") reduceRight
          li: a(href="#find") find
          li: a(href="#filter") filter
          li: a(href="#where") where
          li: a(href="#findWhere") findWhere
          li: a(href="#reject") reject
          li: a(href="#every") every
          li: a(href="#all") all
          li: a(href="#some") some
          li: a(href="#any") any
          li: a(href="#sum") sum
          li: a(href="#product") product
          li: a(href="#contains") contains
          li: a(href="#invoke") invoke
          li: a(href="#pluck") pluck
          li: a(href="#max") max
          li: a(href="#min") min
          li: a(href="#sortBy") sortBy
          li: a(href="#groupBy") groupBy
          li: a(href="#countBy") countBy
          li: a(href="#shuffle") shuffle
          li: a(href="#toArray") toArray
          li: a(href="#size") size
          li: a(href="#span") span
          li: a(href="#get") get
          li: a(href="#memorize") memorize

        h2
          a(href="#arrays") Arrays
            p Numerical array
        ul
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#first") first
          li: a(href="#initial") initial
          li: a(href="#last") last

    article#main(role="main")
      header
        h1 Underbar.php
        p Functional array utility
        p: a.btn(href="https://github.com/emonkak/underbar.php") GitHub Source

      aside: ul.social-buttons
        li: iframe.github-watch-button-frame(src="http://ghbtns.com/github-btn.html?user=emonkak&repo=underbar.php&type=watch&count=true", allowtransparency="true", frameborder="0", scrolling="0", width="110", height="20")
        li: a.twitter-share-button(href="https://twitter.com/share") Tweet
        li: a.hatena-bookmark-button(href="http://b.hatena.ne.jp/entry/https://emonkak.github.io/underbar.php/", data-hatena-bookmark-layout="standard-balloon")
          img(src="http://b.st-hatena.com/images/entry-button/button-only.gif", alt="このエントリーをはてなブックマークに追加", width="20", height="20")
        li: div.fb-like(data-href="https://emonkak.github.io/underbar.php/", data-send="false", data-layout="button_count", data-width="450", data-show-faces="false")

      section#introduction
        h2 Introduction
        p Underbar.phpは配列操作のための便利な関数群を提供する
          a(href="http://underscorejs.org/") Underscore.js
          | ライクなPHPのライブラリです。

        h3 Example

        h3 Features
        ul
          li 遅延リスト
          li Enumerableトレイト
          li mapの並列処理
          li Haskell由来の関数

      section#getting-started
        h2 Getting Started
        p lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

      section#api
        h2 API

        section#collections
          h3 Collection Functions
          // each {{{
          section#each
            h4.function
              <em>void</em> each(<em>array</em> <var>$xs</var>, <em>callable</em> <var>$f</var>)
            p arrayの各要素に対して関数<var>$f</var>を呼び出します。
              | <var>$f</var>は以下の3つの引数を取ります。
            dl.arguments
              dt: var $x
              dd 配列の要素
              dt: var $i
              dd 配列の添字
              dt: var $xs
              dd 配列自身
            pre
              | >>> _::each([1, 2, 3], function($x, $i, $xs) {
              |   echo $x, PHP_EOL;
              | })
              | => 1
              | => 2
              | => 3
              | >>> _::each(['one' => 1, 'two' => 2, 'three' => 3], function($x, $k, $xs) {
              |   echo $k, $x, PHP_EOL;
              | })
              | => one1
              | => two2
              | => three3
            div.top: a(href="#") TOP
          // }}}

          // map {{{
          section#map
            h4.function
              <em>array</em> map(<em>array</em> <var>$xs</var>, <em>callable</em> <var>$f</var>)
            p Arrayの各要素に対して関数<var>$f</var>を適用して新しい配列を返します。
              | <var>$f</var>は以下の3つの引数を取ります。
            dl.arguments
              dt: var $x
              dd 配列の要素
              dt: var $i
              dd 配列の添字
              dt: var $xs
              dd 配列自身
            pre
              | >>> _::map([1, 2, 3], function($x) {
              |   return $x * 3;
              | })
              | => [3, 6, 9]
              | >>> _::map(['one' => 1, 'two' => 2, 'three' => 3], function($x) {
              |   return $x * 3;
              | })
              | => [3, 6, 9]
            div.top: a(href="#") TOP
          // }}}

        section#arrays
          h3 Array Functions
          // first {{{
          section#first
            h4.function
              <em>array</em> first(<em>array</em> <var>$xs</var>)
            h4.function
              <em>mixed</em> first(<em>array</em> <var>$xs</var>, <em>int</em> <var>$n</var>)
            ul.aliases
              li: strong head
              li: strong take
            p 配列の最初の要素を返します。
              | <var>$n</var>を指定した場合は先頭からn個分の要素を含む配列を返します。
            pre
              | >>> _::first([1, 2, 3])
              | 1
              | >>> _::first([1, 2, 3], 1)
              | [1]
              | >>> _::first([1, 2, 3], 2)
              | [1, 2]
            div.top: a(href="#") TOP
          // }}}

    footer#footer
      p Developed by <a href="http://twitter.com/emonkak">@emonkak</a>
      p Licensed under the <a href="https://github.com/emonkak/underbar.php/blob/master/LICENSE">MIT License</a>
    div#fb-root
    script(src="http://b.st-hatena.com/js/bookmark_button.js", async="async")
    script
      !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
    script
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/ja_JP/all.js#xfbml=1";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));
